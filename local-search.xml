<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>humble</title>
    <link href="/2024/01/05/humble/"/>
    <url>/2024/01/05/humble/</url>
    
    <content type="html"><![CDATA[<h1 id="2-Test"><a href="#2-Test" class="headerlink" title="2. Test"></a>2. Test</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>linux</title>
    <link href="/2023/10/09/linux/"/>
    <url>/2023/10/09/linux/</url>
    
    <content type="html"><![CDATA[<h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><p>iptables是amd64,arm,mips的防火墙</p><h2 id="1-1-语法规则"><a href="#1-1-语法规则" class="headerlink" title="1.1 语法规则"></a>1.1 语法规则</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -t 表名 &lt;-<span class="hljs-selector-tag">A</span>/<span class="hljs-selector-tag">I</span>/D/R&gt; 规则链名 <span class="hljs-selector-attr">[规则号]</span> &lt;-<span class="hljs-selector-tag">i</span>/o 网卡号&gt; -<span class="hljs-selector-tag">p</span> 协议名 &lt;-s 源IP/源子网&gt; <span class="hljs-attr">--sport</span> 源端口号 &lt;-d 目标IP/目标子网&gt; <span class="hljs-attr">--dport</span> 目标端口号 -j 动作<br></code></pre></td></tr></table></figure><p>添加自定义规则链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;/&#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$cloudIp</span> <span class="hljs-variable">$domainName</span>&quot;</span><span class="hljs-string">&#x27;/d&#x27;</span> /etc/hosts<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;create chain rules IN_CLOUD&quot;</span><br><br><span class="hljs-comment">#建立新的规则链IN_CLOUD</span><br>iptables -t filter -N IN_CLOUD<br>iptables -t filter -I IN_CLOUD ! -s <span class="hljs-variable">$cloudIp</span> -j DROP<br><br><span class="hljs-comment">#添加规则到INPUT,INPUT是iptables内置的规则链</span><br>iptables -I INPUT -p tcp -m multiport --sport 31024 -j IN_CLOUD <span class="hljs-comment">#INPUT引用了IN_CLOUD</span><br>iptables -I INPUT -p tcp -m multiport --sport 5222,6222,8222,7777,7522 -j IN_CLOUD<br>iptables -I INPUT -p tcp -m multiport --sport 30006,30002,30004 -j IN_CLOUD<br>iptables -I INPUT -p tcp -s 127.0.0.1 -j ACCEPT <br>iptables -A INPUT -j ACCEPT<br><br>sys=$(<span class="hljs-built_in">uname</span> -a)<br>result=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;sys&#125;</span> | grep <span class="hljs-string">&quot;Ubuntu&quot;</span>)<br><span class="hljs-keyword">if</span>  [[ <span class="hljs-string">&quot;<span class="hljs-variable">$result</span>&quot;</span> != <span class="hljs-string">&quot;&quot;</span> ]];<span class="hljs-keyword">then</span><br>    iptables-save &gt; /etc/iptables.rules<br>    <span class="hljs-keyword">if</span> [ `grep -c <span class="hljs-string">&quot;pre-up iptables-restore &lt; /etc/iptables.rules&quot;</span> /etc/network/interfaces` -ne <span class="hljs-string">&#x27;1&#x27;</span> ];<span class="hljs-keyword">then</span><br>    sed -i <span class="hljs-string">&#x27;$a\pre-up iptables-restore &lt; /etc/iptables.rules&#x27;</span> /etc/network/interfaces<br>    sed -i <span class="hljs-string">&#x27;$a\post-down iptables-save &gt; /etc/iptables.rules&#x27;</span> /etc/network/interfaces<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">else</span><br>    iptables-save &gt; etc/sysconfig/iptables<br>    <span class="hljs-keyword">if</span> [ `grep -c <span class="hljs-string">&quot;iptables-restore&quot;</span> /etc/rc.d/rc.local` -ne <span class="hljs-string">&#x27;1&#x27;</span> ];<span class="hljs-keyword">then</span><br>    sed -i <span class="hljs-string">&#x27;$a\iptables-restore &lt; etc/sysconfig/iptables&#x27;</span> /etc/rc.d/rc.local<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><p>删除自定义的规则及规则链</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;/&#x27;</span><span class="hljs-string">&quot;<span class="hljs-variable">$cloudIp</span> <span class="hljs-variable">$domainName</span>&quot;</span><span class="hljs-string">&#x27;/d&#x27;</span> /etc/hosts<br><br><span class="hljs-comment">#删除IN_CLOUD下的规则</span><br>iptables -t filter -D IN_CLOUD ! -s <span class="hljs-variable">$cloudIp</span> -j DROP<br><br><span class="hljs-comment">#删除INPUT下自定义的规则</span><br>iptables -D INPUT -j ACCEPT<br>iptables -D INPUT -p tcp -m multiport --sport 31024 -j IN_CLOUD<br>iptables -D INPUT -p tcp -m multiport --sport 5222,6222,8222,7777,7522 -j IN_CLOUD<br>iptables -D INPUT -p tcp -m multiport --sport 30006,30002,30004 -j IN_CLOUD<br><br><span class="hljs-comment">#删除规则链IN_CLOUD,注意只用没有引用指向IN_CLOUD，以及IN_CLOUD下没有规则时才能删除成功</span><br>iptables -X IN_CLOUD<br><br>iptables -D INPUT -p tcp -s 127.0.0.1 -j ACCEPT<br>sys=$(<span class="hljs-built_in">uname</span> -a)<br>result=$(<span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;sys&#125;</span> | grep <span class="hljs-string">&quot;Ubuntu&quot;</span>)<br><span class="hljs-keyword">if</span>  [[ <span class="hljs-string">&quot;<span class="hljs-variable">$result</span>&quot;</span> != <span class="hljs-string">&quot;&quot;</span> ]];<span class="hljs-keyword">then</span><br>  iptables-save &gt; /etc/iptables.rules<br><span class="hljs-keyword">else</span><br>  iptables-save &gt; etc/sysconfig/iptables<br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-comment">#快速删除规则链下的所有规则</span><br>iptables -F IN_CLOUD<br><br><span class="hljs-comment"># 删除指定的一条规则，number是查看到的规则号，为数字</span><br>iptables -D INPUT <span class="hljs-built_in">number</span> <br><br></code></pre></td></tr></table></figure><p>查看iptables</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs arduino">iptables -nvL<br><br>iptables -nvL --line-numbers<br><br>iptables -nvL <span class="hljs-literal">INPUT</span> <br><br>iptables -nvL <span class="hljs-literal">INPUT</span> --line-numbers<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>docker</title>
    <link href="/2023/10/09/docker/"/>
    <url>/2023/10/09/docker/</url>
    
    <content type="html"><![CDATA[<h1 id="1-制作docker镜像"><a href="#1-制作docker镜像" class="headerlink" title="1 制作docker镜像"></a>1 制作docker镜像</h1><h2 id="1-1-方式一（直接制作-如制作anaconda-python-镜像）"><a href="#1-1-方式一（直接制作-如制作anaconda-python-镜像）" class="headerlink" title="1.1 方式一（直接制作,如制作anaconda python 镜像）"></a>1.1 方式一（直接制作,如制作anaconda python 镜像）</h2><ul><li><p>sudo docker pull ubuntu:18.04</p></li><li><p>sudo docker run -it ubuntu:18.04 &#x2F;bin&#x2F;bash</p></li><li><p>更改镜像源，换成国内阿里源(镜像终端)</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs awk">mv <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list /</span>etc<span class="hljs-regexp">/apt/</span>sources.list.bak<br><br>\<span class="hljs-comment"># 更改镜像为阿里镜像源</span><br>echo <span class="hljs-string">&quot;deb http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb-src http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list &amp;&amp;<br>echo <span class="hljs-string">&quot;deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe&quot;</span> &gt;&gt; <span class="hljs-regexp">/etc/</span>apt/sources.list<br></code></pre></td></tr></table></figure><ul><li>更新源（终端镜像）</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">apt-<span class="hljs-built_in">get</span> update<br>apt-<span class="hljs-built_in">get</span> install wget<br></code></pre></td></tr></table></figure><ul><li><p>把本地安装文件上传至docker ubuntu:(宿主机终端)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 查看正在运行的容器 id</span><br>sudo docker ps<br><span class="hljs-comment"># 复制文件至 docker ubuntu 镜像</span><br>sudo docker cp  <span class="hljs-regexp">/home/</span>carrefour<span class="hljs-regexp">/Anaconda3-2019.10-Linux-x86_64.sh 061095ea358c:/</span>home/anaconda_3.sh<br></code></pre></td></tr></table></figure></li><li><p>在容器中下载anaconda:(镜像终端)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># 下载 anaconda：该版本对应 python3.6</span><br><span class="hljs-attribute">wget</span> https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-<span class="hljs-number">5</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-Linux-x86_64.sh<br><span class="hljs-comment"># 安装 anaconda</span><br><span class="hljs-attribute">bash</span> Anaconda3-<span class="hljs-number">5</span>.<span class="hljs-number">1</span>.<span class="hljs-number">0</span>-Linux-x86_64.sh<br><span class="hljs-comment"># 过程中全部都选择 yes</span><br><span class="hljs-comment"># 使环境变量生效</span><br><span class="hljs-attribute">source</span> ~/.bashrc<br><span class="hljs-comment"># 查看是否生效：若出现 conda 4.4.10 则安装配置成功</span><br><span class="hljs-attribute">conda</span> -V<br></code></pre></td></tr></table></figure></li><li><p>保存镜像，在保存镜像前保证容器不退出(宿主机终端)</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"> <span class="hljs-comment"># 查看容器 id （宿主机终端）</span><br>sudo docker ps<br><span class="hljs-comment"># 按我们的需求更改的容器,我们可以通过命令 docker commit 来提交容器副本 （宿主机终端）</span><br><br>(<span class="hljs-keyword">base) </span><span class="hljs-keyword">shichao@DL:~$ </span>sudo docker commit -m <span class="hljs-string">&quot;anaconda&quot;</span> -a <span class="hljs-string">&quot;wupeigang&quot;</span> <span class="hljs-number">1683</span>ab3e<span class="hljs-symbol">55f</span>0 <span class="hljs-keyword">shichao/ubuntu:v1</span><br><span class="hljs-keyword"></span><br><span class="hljs-comment"># 参数解释如下：</span><br>-m: 提交的描述信息<br>-a: 指定镜像作者<br><span class="hljs-number">1683</span>ab3e<span class="hljs-symbol">55f</span>0：容器 ID<br><span class="hljs-keyword">shichao/ubuntu:v1: </span>指定要创建的目标镜像名<br><span class="hljs-comment"># 查看新镜像 shichao/ubuntu:v1</span><br>sudo docker images<br></code></pre></td></tr></table></figure></li><li><p>退出容器：（镜像终端）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-keyword">exit</span><br></code></pre></td></tr></table></figure></li><li><p>用新镜像启动一个容器：（宿主机终端）</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">sudo docker <span class="hljs-keyword">run</span><span class="language-bash"> -t -i shichao/ubuntu:v1 /bin/bash</span><br></code></pre></td></tr></table></figure></li><li><p>进入启动的容器:(宿主机终端)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 查看容器 id:</span><br>sudo docker ps -a<br><span class="hljs-comment"># 进入容器 id 为 1683ab3e55f0 的容器</span><br>sudo docker exec -it <span class="hljs-number">1683</span>ab3e55f0 <span class="hljs-regexp">/bin/</span>bash<br></code></pre></td></tr></table></figure></li><li><p>容器中安装python:(镜像终端)</p></li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment"># 拷贝依赖到容器镜像中：（宿主机终端）</span><br><br>sudo docker cp  <span class="hljs-regexp">/home/</span>shichao<span class="hljs-regexp">/carrefour/</span>requirements.txt <span class="hljs-number">061095</span>ea358c:<span class="hljs-regexp">/home/</span>files/requirements.txt<br><br><span class="hljs-comment"># 用 anaconda 自带的 pip 安装 (镜像终端)</span><br><br>root@<span class="hljs-number">061095</span>ea358c:<span class="hljs-regexp">/home/</span>files<span class="hljs-comment"># pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><br><span class="hljs-comment"># 返回到 6 进行保存容器</span><br></code></pre></td></tr></table></figure><ul><li>提交镜像到docker hub 或者docker save 保存在本地：（宿主机终端）</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-comment"># 登录 https://harbor.arfa.wise-paas.com 与仓库建立联系</span><br><span class="hljs-comment"># -u 后是用户名</span><br><span class="hljs-comment"># -p 后是密码</span><br><br><span class="hljs-attribute">sudo</span> docker login -u *<span class="hljs-regexp">*.chang</span> -p Wen** https://harbor.arfa.***.com<br><br><span class="hljs-comment"># 本地镜像 shichao/ubuntu:v5 与仓库中 carrefour:v1.0.0 建立对应关系</span><br><br>sudo docker tag shichao/ubuntu:v5 <span class="hljs-regexp">harbor.arfa.*</span>*<span class="hljs-regexp">*.com</span>/microservice/carrefour:v1.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br><br><span class="hljs-comment"># push 到仓库</span><br>sudo docker push <span class="hljs-regexp">harbor.arfa.*</span>*<span class="hljs-regexp">*.com</span>/microservice/carrefour:v1.<span class="hljs-number">0</span>.<span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><h2 id="1-2使用docker-file-制作镜像"><a href="#1-2使用docker-file-制作镜像" class="headerlink" title="1.2使用docker file 制作镜像"></a>1.2使用docker file 制作镜像</h2><p>应用app目录如下:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus">project  <br>  ├── requirements<span class="hljs-selector-class">.txt</span><br>  ├── Dockerfile<br>  └── app<br>      └── app<span class="hljs-selector-class">.py</span><br>      └── &lt;other <span class="hljs-selector-class">.py</span> files&gt;<br></code></pre></td></tr></table></figure><p>Dockerfile内容如下：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> ubuntu:<span class="hljs-number">18.04</span><br><br><span class="hljs-keyword">MAINTAINER</span> shichao<br><br><span class="hljs-keyword">RUN</span><span class="language-bash">  sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list</span><br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> apt-get update -y &amp;&amp; \  </span><br>    apt-get install -y python3-pip python3-dev<br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><br><span class="hljs-keyword">COPY</span><span class="language-bash"> ./requirements.txt /app/requirements.txt</span><br><br><span class="hljs-keyword">RUN</span><span class="language-bash"> pip3 install -r requirements.txt  -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><br><span class="hljs-keyword">COPY</span><span class="language-bash"> app/ /app/</span><br><span class="hljs-comment">#ADD ./app.zip /</span><br><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"> [ <span class="hljs-string">&quot;python3&quot;</span> ]</span><br><br><span class="hljs-comment"># 启动镜像后启动 app 的命令</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> [ <span class="hljs-string">&quot;/app/consumer_defrost.py&quot;</span> ]</span><br><br></code></pre></td></tr></table></figure><p>编译生成镜像：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># shichao/ubuntu:v3.0.1 是镜像名称</span><br><span class="hljs-attribute">sudo</span> docker build -t shichao/ubuntu:v3.<span class="hljs-number">0</span>.<span class="hljs-number">1</span> .<br></code></pre></td></tr></table></figure><p>启动镜像测试：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">sudo</span> docker run shichao/ubuntu:v3.<span class="hljs-number">0</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="Dockerfile-语法"><a href="#Dockerfile-语法" class="headerlink" title="Dockerfile 语法"></a>Dockerfile 语法</h1><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span><br>构建镜像基于哪个镜像<br><br><span class="hljs-keyword">MAINTAINER</span><br>镜像维护者姓名或邮箱地址<br><br><span class="hljs-keyword">RUN</span><span class="language-bash"></span><br><span class="language-bash">构建镜像时运行的指令</span><br><br><span class="hljs-keyword">CMD</span><span class="language-bash"></span><br><span class="language-bash">运行容器时执行的shell环境,变参</span><br><br><span class="hljs-keyword">VOLUME</span><span class="language-bash"></span><br><span class="language-bash">指定容器挂载点到宿主机自动生成的目录或其他容器</span><br><br><span class="hljs-keyword">USER</span><br>为<span class="hljs-keyword">RUN</span><span class="language-bash">、CMD、和 ENTRYPOINT 执行命令指定运行用户</span><br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"></span><br><span class="language-bash">为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录</span><br><br>HEALTHCHECH<br>健康检查<br><br><span class="hljs-keyword">ARG</span><br>构建时指定的一些参数<br><br><span class="hljs-keyword">EXPOSE</span><br>声明容器的服务端口（仅仅是声明）<br><br><span class="hljs-keyword">ENV</span><br>设置容器环境变量<br><br><span class="hljs-keyword">ADD</span><span class="language-bash"></span><br><span class="language-bash">拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压</span><br><br><span class="hljs-keyword">COPY</span><span class="language-bash"></span><br><span class="language-bash">拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能</span><br><br><span class="hljs-keyword">ENTRYPOINT</span><span class="language-bash"></span><br><span class="language-bash">运行容器时执行的shell命令，定参</span><br></code></pre></td></tr></table></figure><h1 id="docker-run"><a href="#docker-run" class="headerlink" title="docker run"></a>docker run</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">docker <span class="hljs-built_in">run</span> -itd <span class="hljs-attribute">--privileged</span>=<span class="hljs-literal">true</span> --name test --hostname test --restart unless-stopped <span class="hljs-attribute">--net</span>=host  <span class="hljs-attribute">--cpus</span>=1 -m 512M  <br>-v /tmp:/tmp -w /opt -p 80:80  -e <span class="hljs-attribute">MYSQL_IP</span>=192.168.1.1 <span class="hljs-attribute">--device</span>=/dev/uhid docker.io/nginx:latest<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo搭建博客</title>
    <link href="/2023/10/09/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/10/09/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1-参考文章"><a href="#1-参考文章" class="headerlink" title="1. 参考文章"></a>1. 参考文章</h1><p>文章1[<a href="https://zhuanlan.zhihu.com/p/633140812]">https://zhuanlan.zhihu.com/p/633140812]</a><br>文章2[<a href="https://cloud.tencent.com/developer/article/2280881]">https://cloud.tencent.com/developer/article/2280881]</a></p><h1 id="2-Github创建仓库"><a href="#2-Github创建仓库" class="headerlink" title="2. Github创建仓库"></a>2. Github创建仓库</h1><p>创建 username.github.io 仓库  </p><h1 id="3-nodejs、hexo"><a href="#3-nodejs、hexo" class="headerlink" title="3. nodejs、hexo"></a>3. nodejs、hexo</h1><p>官网下载node(带npm)</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">sudo chown -R <span class="hljs-constructor">$(<span class="hljs-params">whoami</span>)</span> <span class="hljs-constructor">$(<span class="hljs-params">npm</span> <span class="hljs-params">config</span> <span class="hljs-params">get</span> <span class="hljs-params">prefix</span>)</span>/&#123;lib/node_modules,bin,share&#125;<br><br>npm install hexo-cli -g<br><br>hexo init <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">XXXXX</span>.</span></span>github.io<br><br>cd <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">XXXXX</span>.</span></span>github.io<br><br>npm install --save hexo-deployer-git<br><br>hexo server<br><br></code></pre></td></tr></table></figure><p><a href="http://localhost:4000/">http://localhost:4000</a> 本地博客网站</p><h1 id="4-github添加本机ssh密钥"><a href="#4-github添加本机ssh密钥" class="headerlink" title="4. github添加本机ssh密钥"></a>4. github添加本机ssh密钥</h1><p>本机生成ssh密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/.ssh<br><br>ssh-keygen -t rsa -C <span class="hljs-string">&quot;邮件地址&quot;</span><br></code></pre></td></tr></table></figure><p>将生成的 id_rsa.pub的内容复制到github 的ssh 密钥</p><p>测试是否添加成功: </p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ssh</span> -T git<span class="hljs-variable">@github</span>.com<br></code></pre></td></tr></table></figure><p>配置账号和密码</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;github user name&quot;</span><br><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;github 注册油箱&quot;</span><br></code></pre></td></tr></table></figure><h1 id="hexo-写博客-push到github"><a href="#hexo-写博客-push到github" class="headerlink" title="hexo 写博客,push到github"></a>hexo 写博客,push到github</h1><p>进入hexo项目</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-number">1.</span> 新建博客<br><br>hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;docker&quot;</span><br><br><span class="hljs-number">2.</span> hexo 生成<br><br>hexo g<br><br><span class="hljs-number">3.</span> hexo <span class="hljs-built_in">push</span> 到github<br><br>hexo d<br><br></code></pre></td></tr></table></figure><p>给hexo 配置主题fluid[<a href="https://hexo.fluid-dev.com/docs/start/]">https://hexo.fluid-dev.com/docs/start/]</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu20环境搭建</title>
    <link href="/2023/10/08/ubuntu20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/10/08/ubuntu20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="1-ROS2-foxy-安装"><a href="#1-ROS2-foxy-安装" class="headerlink" title="1.ROS2 foxy 安装"></a>1.ROS2 foxy 安装</h1><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">sudo apt update &amp;&amp; sudo apt install curl<br><br>sudo vim /etc/hosts<br><br># 添加如下内容<br><span class="hljs-number">185.199.108.133</span>         raw.githubusercontent.com<br><span class="hljs-number">185.199.109.133</span>         raw.githubusercontent.com<br><span class="hljs-number">185.199.110.133</span>         raw.githubusercontent.com<br><span class="hljs-number">185.199.111.133</span>         raw.githubusercontent.com<br><br><br>sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg<br><br>echo <span class="hljs-string">&quot;deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main&quot;</span> | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null<br><br>sudo apt update<br><br>sudo apt upgrade<br><br>sudo apt install ros-foxy-desktop<br><br><br><br></code></pre></td></tr></table></figure><h1 id="2-ignition-gazebo-安装"><a href="#2-ignition-gazebo-安装" class="headerlink" title="2. ignition-gazebo 安装"></a>2. ignition-gazebo 安装</h1><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sas">sudo apt <span class="hljs-keyword">update</span><br><br>sudo apt install -y wget<br><br>sudo sh -c <span class="hljs-string">&#x27;echo &quot;deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main&quot; &gt; /etc/apt/sources.list.d/gazebo-stable.list&#x27;</span><br><br>wget https://packages.osrfoundation.org/gazebo.<span class="hljs-keyword">key</span> -O - | sudo apt-<span class="hljs-keyword">key</span> <span class="hljs-keyword">add</span> -<br><br>sudo apt install ros-foxy-ros-gz<br><br></code></pre></td></tr></table></figure><h1 id="2-ros相关依赖安装"><a href="#2-ros相关依赖安装" class="headerlink" title="2. ros相关依赖安装"></a>2. ros相关依赖安装</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo apt <span class="hljs-keyword">install </span>ros-foxy-gazebo-ros<br><br>sudo apt <span class="hljs-keyword">install </span>ros-foxy-vision-msgs<br><br>sudo apt <span class="hljs-keyword">install </span>ros-foxy-slam-toolbox<br><br>sudo apt <span class="hljs-keyword">install </span>ros-foxy-navigation2<br><br>sudo apt <span class="hljs-keyword">install </span>ros-foxy-nav2-<span class="hljs-keyword">bringup </span><br><br>sudo apt <span class="hljs-keyword">install </span>ros-foxy-turtlebot3*<br><br>sudo apt <span class="hljs-keyword">install </span>ros-foxy-gazebo-ros*<br><br></code></pre></td></tr></table></figure><h1 id="3-安装rosdep-使用rosdep安装项目中需要的依赖"><a href="#3-安装rosdep-使用rosdep安装项目中需要的依赖" class="headerlink" title="3.安装rosdep,使用rosdep安装项目中需要的依赖"></a>3.安装rosdep,使用rosdep安装项目中需要的依赖</h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sudo apt install python3-rosdep<br><br>sudo rosdep init<br><br>rosdep update <span class="hljs-params">--include-eol-distros</span> <span class="hljs-comment">#这一步需要虚拟机翻墙，如果报错，主要是网络原因，可以设置代理后多试几次</span><br><br><span class="hljs-keyword">cd</span> ~<span class="hljs-string">/rmf_ws</span><br><br>rosdep install <span class="hljs-params">--from-paths</span> src <span class="hljs-params">--ignore-src</span> <span class="hljs-params">--rosdistro</span> foxy -r -y<br><br><br></code></pre></td></tr></table></figure><h1 id="4-其它所需包安装"><a href="#4-其它所需包安装" class="headerlink" title="4. 其它所需包安装"></a>4. 其它所需包安装</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vim">sudo apt <span class="hljs-keyword">update</span> <br><br>sudo apt install <span class="hljs-keyword">python3</span>-pip<br><br>sudo apt install git cmake <span class="hljs-keyword">python3</span>-vcstool curl qt5-default -<span class="hljs-keyword">y</span><br><br><span class="hljs-keyword">python3</span> -<span class="hljs-keyword">m</span> pip install flask-socketio fastapi uvicorn datacode<br><br><span class="hljs-keyword">python3</span> -<span class="hljs-keyword">m</span> pip install websockets==<span class="hljs-number">10.3</span><br><br><span class="hljs-keyword">python3</span> -<span class="hljs-keyword">m</span> pip install setuptools==<span class="hljs-number">58.2</span>.<span class="hljs-number">0</span><br><br>sudo apt-<span class="hljs-built_in">get</span> install <span class="hljs-keyword">python3</span>-colcon*<br><br></code></pre></td></tr></table></figure><h1 id="5-前段nodejs-react安装"><a href="#5-前段nodejs-react安装" class="headerlink" title="5.前段nodejs,react安装"></a>5.前段nodejs,react安装</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml">cd ~/Desktop/nodejs_ws/<br><br>bash nvm_install.sh<br><br><span class="hljs-comment">&lt;!-- 使用脚手架创建项目，顺便安装相关依赖 --&gt;</span><br>npx create-react-app react-basic<br><br><span class="hljs-comment">&lt;!-- 运行项目 --&gt;</span><br>cd react-basic<br><br>npm start<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/10/08/hello-world/"/>
    <url>/2023/10/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
